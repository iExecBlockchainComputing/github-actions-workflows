name: Build, Test and Publish Rust Package

on:
  workflow_call:
    inputs:
      rust-version:
        description: 'Rust version to use'
        default: 'stable'
        type: string
      working-directory:
        description: 'The directory to run jobs from'
        default: '.'
        type: string
      enable-cache:
        description: 'Enable caching of dependencies'
        default: true
        type: boolean
      publish-crates-io:
        description: 'Publish package to crates.io'
        default: false
        type: boolean
    secrets:
      CARGO_REGISTRY_TOKEN:
        required: false

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  
jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@${{ inputs.rust-version }}
        with:
          toolchain: ${{ inputs.rust-version }}
          components: clippy, rustfmt

      - name: Cache dependencies
        if: ${{ inputs.enable-cache }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-release-

      - name: Check formatting
        working-directory: ${{ inputs.working-directory }}
        run: cargo fmt --all -- --check

      - name: Run linter (Clippy)
        working-directory: ${{ inputs.working-directory }}
        run: cargo clippy --all-targets -- -D warnings

      - name: Build
        working-directory: ${{ inputs.working-directory }}
        run: cargo build --release

      - name: Run tests
        working-directory: ${{ inputs.working-directory }}
        run: cargo test --release

      - name: Validate package
        if: ${{ inputs.publish-crates-io }}
        working-directory: ${{ inputs.working-directory }}
        run: cargo package

      - name: Publish to crates.io
        if: ${{ inputs.publish-crates-io }}
        working-directory: ${{ inputs.working-directory }}
        run: cargo publish
