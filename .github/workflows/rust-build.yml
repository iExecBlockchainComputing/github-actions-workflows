name: Build and Test Rust Package

on:
  workflow_call:
    inputs:
      rust-version:
        description: 'Rust version to use'
        default: 'stable'
        type: string
      build-profile:
        description: 'Cargo profile to use for building (debug, release)'
        default: 'release'
        type: string
      run-audit:
        description: 'Run cargo-audit for security vulnerabilities'
        default: true
        type: boolean
      enable-cache:
        description: 'Enable caching of dependencies'
        default: true
        type: boolean

env:
  CARGO_TERM_COLOR: always
  
jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ inputs.rust-version }}
          components: clippy

      - name: Cache dependencies
        if: ${{ inputs.enable-cache }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ inputs.build-profile }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ inputs.build-profile }}-

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run linter (Clippy)
        run: cargo clippy --all-targets -- -D warnings
      
      - name: Install cargo-audit
        if: ${{ inputs.run-audit }}
        run: cargo install cargo-audit

      - name: Run security audit
        if: ${{ inputs.run-audit }}
        run: cargo audit

      - name: Build
        run: cargo build --profile ${{ inputs.build-profile }}

      - name: Run tests
        run: cargo test --profile ${{ inputs.build-profile }}
