name: Publish Package NPM

on:
  workflow_call:
    inputs:
      scope:
        description: 'NPM package scope (e.g., @iexec)'
        default: '@iexec'
        type: string
      node-version:
        description: 'Node.js version to use'
        default: '20'
        type: string
      registry:
        description: 'NPM registry URL'
        default: 'https://registry.npmjs.org'
        type: string
      access:
        description: 'Package access (public/restricted)'
        default: 'public'
        type: string
      provenance:
        description: 'Enable npm provenance'
        default: true
        type: boolean
      install-command:
        description: 'Install dependencies command'
        default: 'npm ci'
        type: string
      test-command:
        description: 'Run unit tests command'
        default: 'npm test --if-present'
        type: string
      lint-command:
        description: 'Run linting command'
        default: 'npm run lint --if-present'
        type: string
      type-check-command:
        description: 'Run type-checking command'
        default: 'npm run type-check --if-present'
        type: string
      environment:
        description: 'GitHub environment'
        default: 'production'
        type: string
      tag:
        description: 'npm publish tag (e.g., latest, nightly)'
        default: ''
        type: string
      tag-prefix:
        description: 'Prefix for Git tag'
        default: 'v'
        type: string
      working-directory:
        description: 'Directory containing package.json'
        default: ''
        type: string
    secrets:
      npm-token:
        description: 'NPM auth token'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: ${{ inputs.registry }}
          scope: ${{ inputs.scope }}
          cache: npm

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.install-command }}

      - name: Run unit tests
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.test-command }}

      - name: Run linting
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.lint-command }}

      - name: Run type checks
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.type-check-command }}

      - name: Publish package
        working-directory: ${{ inputs.working-directory }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm-token }}
        run: |
          TAG_OPT=""
          if [ -n "${{ inputs.tag }}" ]; then
            TAG_OPT="--tag ${{ inputs.tag }}"
          fi

          if [ "${{ inputs.provenance }}" = "true" ]; then
            npm publish --access ${{ inputs.access }} $TAG_OPT --provenance
          else
            npm publish --access ${{ inputs.access }} $TAG_OPT
          fi
