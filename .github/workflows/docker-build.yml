name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'Path to Dockerfile'
        default: 'Dockerfile'
        type: string
      image-name:
        description: 'Name of Docker Image'
        type: string
        required: true
    secrets:
      dockerhub-username:
        required: true
      dockerhub-pat:
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IS_TAG_TRIGGER: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Get branch names
        id: branch-names
        uses: tj-actions/branch-names@v8

      # Verify tag is on main or release branch
      - name: Verify tag is on main or release branch
        if: env.IS_TAG_TRIGGER == 'true'
        run: |
          if [[ "${{ steps.branch-names.outputs.base_ref_branch }}" == "main" || "${{ steps.branch-names.outputs.base_ref_branch }}" =~ ^release/ ]]; then
            echo "✅ Tag ${{ steps.branch-names.outputs.tag }} is on an allowed branch: ${{ steps.branch-names.outputs.base_ref_branch }}"
          else
            echo "Current base branch: ${{ steps.branch-names.outputs.base_ref_branch }}"
            echo "Tags must be created on main or release/* branches."
            exit 1

      - name: Verify npm package version matches tag
        if: env.IS_TAG_TRIGGER == 'true'
        uses: nick-y-ito/gha-npm-version-match@v1

      - name: Checkout Repository
        uses: actions/checkout@v4

      # Determine Docker Image Tags
      - name: Determine Docker Image Tags
        run: |
          IMAGE_NAME="${{ inputs.image-name }}"
          # Initialize IMAGE_TAG variable
          IMAGE_TAG=""

          if [[ "$IS_TAG_TRIGGER" == "true" ]]; then
            TAG_VERSION=${GITHUB_REF#refs/tags/v}
            IMAGE_TAG="$IMAGE_NAME:$TAG_VERSION"
          else
            SHORT_COMMIT=$(git rev-parse --short HEAD)
            IMAGE_TAG="$IMAGE_NAME:dev-$SHORT_COMMIT"
          fi

          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "✅ Resolved IMAGE_TAG: $IMAGE_TAG"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub-username }}
          password: ${{ secrets.dockerhub-pat }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          file: ${{ inputs.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_TAG }}