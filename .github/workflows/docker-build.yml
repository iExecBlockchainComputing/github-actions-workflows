name: Build, Test and Push Docker Image

on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'Path to Dockerfile'
        default: 'Dockerfile'
        type: string
      image-name:
        description: 'Name of Docker Image'
        type: string
        required: true
    secrets:
      dockerhub-username:
        required: true
      dockerhub-pat:
        required: true

jobs:
  build-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ inputs.image-name }}:${{ github.sha }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@v0.29.0
        with:
          image-ref: ${{ inputs.image-name }}:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          hide-progress: true
          output: trivy.txt

      - name: Publish Trivy Output to Summary
        run: |
          if [[ -s trivy.txt ]]; then
            {
              echo "### Security Output"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo '```terraform'
              cat trivy.txt
              echo '```'
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi

  build-push:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub-username }}
          password: ${{ secrets.dockerhub-pat }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ inputs.image-name }}:${{ github.sha }}
